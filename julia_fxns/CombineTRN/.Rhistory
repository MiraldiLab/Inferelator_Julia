                column_names_gp=gpar(fontsize=24, fontface=2), 
              row_names_gp=gpar(fontsize=16))
ht <- draw(ht)
pdf("/data/miraldiNB/Katko/Projects/Barski_CD4_Multiome/Network/CoreAnalysis/TFA_heatmap.pdf", width = 7.5, height = 15)
draw(ht)
dev.off()
file_out <- file.path(dir_out, paste0('heat_GRN_core_CellType_up_subset.pdf'))
pdf(file_out, width=heat_w_celltype_sub, height=heat_h_celltype_sub)
ht <- Heatmap(mat_subset_up, name='-Log10(P)', col=heat_col_up, 
                #column_labels=name_celltype[colnames(mat_subset_up),'Name']
                column_labels = colnames(mat_subset_up),
                rect_gp = gpar(col='grey70', lwd=1),
                cluster_columns=FALSE, cluster_rows=FALSE, 
                show_column_dend=FALSE, show_row_dend=FALSE, show_row_names=TRUE, show_column_names=TRUE, 
                column_names_side='top', row_names_side='left',column_names_rot=90,
                column_names_gp=gpar(fontsize=24, fontface=2), 
              row_names_gp=gpar(fontsize=16))
ht <- draw(ht)
dev.off()
order_tf_sub <- rownames(mat_subset_up)[row_order(ht)]
file_out <- file.path(dir_out, paste0('heat_GRN_core_CellType_dn_subset.pdf'))
pdf(file_out, width=heat_w_celltype_sub, height=heat_h_celltype_sub)
ht <- Heatmap(mat_subset_dn[order_tf_sub,], name='-Log10(P)', col=heat_col_dn, 
                column_labels=name_celltype[colnames(mat_subset_dn),'Name'],
                rect_gp = gpar(col='grey70', lwd=1),
                cluster_columns=FALSE, cluster_rows=FALSE, 
                show_column_dend=FALSE, show_row_dend=FALSE, show_row_names=TRUE, show_column_names=TRUE, 
                column_names_side='top', row_names_side='left',column_names_rot=90,
                column_names_gp=gpar(fontsize=24, fontface=2), 
              row_names_gp=gpar(fontsize=16))
ht <- draw(ht)
dev.off()
file_out <- file.path(dir_out, paste0('heat_GRN_core_CellType_up_subset.pdf'))
pdf(file_out, width=heat_w_celltype_sub, height=heat_h_celltype_sub)
ht <- Heatmap(mat_subset_up, name='-Log10(P)', col=heat_col_up, 
                #column_labels=name_celltype[colnames(mat_subset_up),'Name']
                column_labels = colnames(mat_subset_up),
                rect_gp = gpar(col='grey70', lwd=1),
                cluster_columns=FALSE, cluster_rows=FALSE, 
                show_column_dend=FALSE, show_row_dend=FALSE, show_row_names=TRUE, show_column_names=FALSE, 
                column_names_side='top', row_names_side='left',column_names_rot=90,
                column_names_gp=gpar(fontsize=24, fontface=2), 
              row_names_gp=gpar(fontsize=22))
ht <- draw(ht)
dev.off()
order_tf_sub <- rownames(mat_subset_up)[row_order(ht)]
file_out <- file.path(dir_out, paste0('heat_GRN_core_CellType_dn_subset.pdf'))
pdf(file_out, width=heat_w_celltype_sub, height=heat_h_celltype_sub)
ht <- Heatmap(mat_subset_dn[order_tf_sub,], name='-Log10(P)', col=heat_col_dn, 
                column_labels=name_celltype[colnames(mat_subset_dn),'Name'],
                rect_gp = gpar(col='grey70', lwd=1),
                cluster_columns=FALSE, cluster_rows=FALSE, 
                show_column_dend=FALSE, show_row_dend=FALSE, show_row_names=TRUE, show_column_names=FALSE, 
                column_names_side='top', row_names_side='left',column_names_rot=90,
                column_names_gp=gpar(fontsize=24, fontface=2), 
              row_names_gp=gpar(fontsize=16))
ht <- draw(ht)
dev.off()
file_out <- file.path(dir_out, paste0('heat_GRN_core_CellType_up_subset.pdf'))
pdf(file_out, width=heat_w_celltype_sub, height=heat_h_celltype_sub)
ht <- Heatmap(mat_subset_up, name='-Log10(P)', col=heat_col_up, 
                #column_labels=name_celltype[colnames(mat_subset_up),'Name']
                column_labels = colnames(mat_subset_up),
                rect_gp = gpar(col='grey70', lwd=1),
                cluster_columns=FALSE, cluster_rows=FALSE, 
                show_column_dend=FALSE, show_row_dend=FALSE, show_row_names=TRUE, show_column_names=FALSE, 
                column_names_side='top', row_names_side='left',column_names_rot=90,
                column_names_gp=gpar(fontsize=24, fontface=2), 
              row_names_gp=gpar(fontsize=22))
ht <- draw(ht)
dev.off()
order_tf_sub <- rownames(mat_subset_up)[row_order(ht)]
file_out <- file.path(dir_out, paste0('heat_GRN_core_CellType_dn_subset.pdf'))
pdf(file_out, width=heat_w_celltype_sub, height=heat_h_celltype_sub)
ht <- Heatmap(mat_subset_dn[order_tf_sub,], name='-Log10(P)', col=heat_col_dn, 
                column_labels=name_celltype[colnames(mat_subset_dn),'Name'],
                rect_gp = gpar(col='grey70', lwd=1),
                cluster_columns=FALSE, cluster_rows=FALSE, 
                show_column_dend=FALSE, show_row_dend=FALSE, show_row_names=TRUE, show_column_names=FALSE, 
                column_names_side='top', row_names_side='left',column_names_rot=90,
                column_names_gp=gpar(fontsize=24, fontface=2), 
                row_names_gp=gpar(fontsize=22))
ht <- draw(ht)
dev.off()
file_out <- file.path(dir_out, "TFA_heatmap.pdf")
pdf(file_out, width = heat_w_celltype_sub, height = heat_h_celltype_sub)
ht <- Heatmap(TFA, name='TFA', col=heat_col, 
                #column_labels=name_celltype[colnames(mat_subset_up),'Name']
                column_labels = colnames(TFA),
                rect_gp = gpar(col='grey70', lwd=1),
                cluster_columns=FALSE, cluster_rows=TRUE, 
                show_column_dend=FALSE, show_row_dend=FALSE, show_row_names=TRUE, show_column_names=FALSE, 
                column_names_side='top', row_names_side='left',column_names_rot=90,
                column_names_gp=gpar(fontsize=24, fontface=2), 
              row_names_gp=gpar(fontsize=22))
draw(ht)
dev.off()
head(TFA)
pdf(file_out, width = heat_w_celltype_sub, height = heat_h_celltype_sub)
ht <- Heatmap(TFA, name='TFA', col=heat_col, 
                #column_labels=name_celltype[colnames(mat_subset_up),'Name']
                column_labels = colnames(TFA),
                rect_gp = gpar(col='grey70', lwd=1),
                cluster_columns=FALSE, cluster_rows=FALSE, 
                show_column_dend=FALSE, show_row_dend=FALSE, show_row_names=TRUE, show_column_names=FALSE, 
                column_names_side='top', row_names_side='left',column_names_rot=90,
                column_names_gp=gpar(fontsize=24, fontface=2), 
              row_names_gp=gpar(fontsize=22))
draw(ht)
dev.off()
head(TFA)
col_order <- c("Na誰ve_rest_0h","TEMrest_0h",
                "TCMrest_0h",'Na誰ve_act_2h','Na誰ve_act_5h','Na誰ve_act_2h',"TCMact_2h","TCMact_5h","TCMact_15h",
                "TEM_HDAC9hi_2h","TEM_HDAC9hi_5h","TEM_HDAC9hi_15h","Treg_0h","Treg_2h","Treg_5h","Treg_15h")
 
inf <- #fb825e
noninf <- #030312
# params
fdr <- 0.1 # FDR cutoff
min_padj <- 1E-20 # threshold to min padj
order_celltype <- col_order
subset_celltype <- col_order
subset_heavy <- col_order
n_heavy <- 2 # top TF per heavy subset
n_other <- 0 # top TF per other subset
keep_tf <- NULL
del_tf <- NULL
heat_max_tf <- 30 # max number of tfs to plot
heat_max_p_celltype <- 8 # max -log10p heatmap - celltype
heat_max_tfmrna <- 2 # max tf mrna colorbar
heat_max_tfa <- 2 # max tfa colorbar
heat_h_celltype <- 28 # heatmap height - celltype
heat_w_celltype <- 4 # heatmap height - celltype
heat_h_celltype_sub <- 20 # heatmap height - celltype subset
heat_w_celltype_sub <- 10 # heatmap height - celltype subset
heat_h_age <- 2.7 # age heatmap height
max_opt_k <- 40 # number of kmeans clusters to test
k_clust <- 5 # number of kmeans clusters for core heatmap
k_clust_other <- 5 # number of kmeans clusters for core heatmap
clust_lw <- 1.5 # row cluster line weight
heat_w_diff_other <- 4.5 # heatmap width - tfa diff other
heat_h_diff_other <- 21 # heatmap height - tfa diff other
# heatmap color scale
heat_col_up <- colorRamp2(c(0, heat_max_p_celltype), c('white','red'))
heat_col_dn <- colorRamp2(c(0, heat_max_p_celltype), c('white','blue'))
heat_col_both <- colorRamp2(c(-heat_max_p_celltype, 0, heat_max_p_celltype), c('blue','white','red'))
heat_col_tfmrna <- colorRamp2(c(-heat_max_tfmrna, 0, heat_max_tfmrna), c('blue','white','red'))
heat_col_tfa <- colorRamp2(c(-heat_max_tfa, 0, heat_max_tfa), c('forestgreen','white','blueviolet'))
heat_col_bin <- colorRamp2(c(0, 1), c('white','black'))
# load signature tfs
sig_tf_all <- read.table(file_sig_tf)
colnames(sig_tf_all) <- sig_tf_all[1,]
sig_tf_all <- sig_tf_all[-1,]
sig_tf_all <- sig_tf_all[,1:3]
# sig_tf_all <- sig_tf_all[grepl('IAV_6',sig_tf_all$group_major),]
sig_tf_up <- subset(sig_tf_all, sig_tf_all$MeanLog2FC > 0)
sig_tf_dn <- subset(sig_tf_all, sig_tf_all$MeanLog2FC < 0)
colnames(sig_tf_up) <- c('CellType','TF','MeanLog2FC')
colnames(sig_tf_dn) <- c('CellType','TF','MeanLog2FC')
sig_tf_up$CellTypeTF <- paste(sig_tf_up$CellType, sig_tf_up$TF, sep='_')
sig_tf_dn$CellTypeTF <- paste(sig_tf_dn$CellType, sig_tf_dn$TF, sep='_')
gsea_celltype_up <- read.delim(file_gsea_celltype_up, header=TRUE, row.names=1, sep='\t')
gsea_celltype_dn <- read.delim(file_gsea_celltype_dn, header=TRUE, row.names=1, sep='\t')
# filter gsea
# enrichments of activation of upregulated signatures
# enrichments of repression of downregulated signatures
#cell type
gsea_celltype_up <- gsea_celltype_up[grepl('^Up',rownames(gsea_celltype_up)),]
gsea_celltype_dn <- gsea_celltype_dn[grepl('^Down',rownames(gsea_celltype_dn)),]
# reformat
#cell type
rownames(gsea_celltype_up) <- gsub('Upcelltype_condition','',rownames(gsea_celltype_up))
rownames(gsea_celltype_dn) <- gsub('Downcelltype_condition','',rownames(gsea_celltype_dn))
gsea_celltype_up <- melt(as.matrix(gsea_celltype_up), value.name='Padj', varnames=c('CellType','TF'))
gsea_celltype_dn <- melt(as.matrix(gsea_celltype_dn), value.name='Padj', varnames=c('CellType','TF'))
gsea_celltype_up$Padj <- pmax(gsea_celltype_up$Padj, min_padj)
gsea_celltype_dn$Padj <- pmax(gsea_celltype_dn$Padj, min_padj)
# filter by fdr
gsea_celltype_up <- subset(gsea_celltype_up, Padj <= fdr)
gsea_celltype_dn <- subset(gsea_celltype_dn, Padj <= fdr)
# filter by signature TFs
gsea_celltype_up$CellTypeTF <- paste(gsea_celltype_up$CellType, gsea_celltype_up$TF, sep='_')
gsea_celltype_dn$CellTypeTF <- paste(gsea_celltype_dn$CellType, gsea_celltype_dn$TF, sep='_')
gsea_celltype_up <- subset(gsea_celltype_up, CellTypeTF %in% sig_tf_up$CellTypeTF)
gsea_celltype_dn <- subset(gsea_celltype_dn, CellTypeTF %in% sig_tf_up$CellTypeTF)
# -log10P
gsea_celltype_up$LogP <- -log10(gsea_celltype_up$Padj)
gsea_celltype_dn$LogP <- -log10(gsea_celltype_dn$Padj)
#filter inf values from 0 padj
gsea_celltype_up <- gsea_celltype_up[which(gsea_celltype_up$Padj != 0),]
gsea_celltype_dn <- gsea_celltype_dn[which(gsea_celltype_dn$Padj != 0),]
# heatmap matrices
celltype_all <- unique(union(gsea_celltype_up$CellType,gsea_celltype_dn$CellType))
tf_all_celltype <- unique(union(gsea_celltype_up$TF,gsea_celltype_dn$TF))
mat_celltype_up <- matrix(0, length(tf_all_celltype), length(celltype_all))
colnames(mat_celltype_up) <- celltype_all
rownames(mat_celltype_up) <- tf_all_celltype
mat_celltype_dn <- matrix(0, length(tf_all_celltype), length(celltype_all))
colnames(mat_celltype_dn) <- celltype_all
rownames(mat_celltype_dn) <- tf_all_celltype
for (ix in 1:nrow(gsea_celltype_up)){
    mat_celltype_up[as.character(gsea_celltype_up$TF)[ix], as.character(gsea_celltype_up$CellType)[ix]] <- 
                        gsea_celltype_up$LogP[ix]
}
for (ix in 1:nrow(gsea_celltype_dn)){
    mat_celltype_dn[as.character(gsea_celltype_dn$TF)[ix], as.character(gsea_celltype_dn$CellType)[ix]] <- 
                        gsea_celltype_dn$LogP[ix]
}
# order tfs
order_tf_celltype <- rev(rownames(mat_celltype_up)[cluster_hierarchical(t(cbind(mat_celltype_up,mat_celltype_dn)))])
mat_celltype_up <- mat_celltype_up[order_tf_celltype,]
mat_celltype_up <- mat_celltype_up[,order_celltype]
mat_celltype_dn <- mat_celltype_dn[order_tf_celltype,]
mat_celltype_dn <- mat_celltype_dn[,order_celltype]
# heatmap celltype annotation
heat_meta_celltype <- list()
heat_meta_celltype[['CellType']] <- setNames(color_celltype[,1], rownames(color_celltype))
annot_celltype <- HeatmapAnnotation(df=data.frame(row.names=order_celltype, CellType=order_celltype), 
                                    col=heat_meta_celltype, show_legend=FALSE,
                                    annotation_name_gp=gpar(fontsize=8), simple_anno_size=unit(0.5,'cm'))
annot_celltype_sub <- HeatmapAnnotation(df=data.frame(row.names=subset_celltype, CellType=subset_celltype), 
                                    col=heat_meta_celltype, show_legend=FALSE,
                                    annotation_name_gp=gpar(fontsize=8), simple_anno_size=unit(0.5,'cm'))
# optimal k
mat_celltype_bin <- sign(abs(mat_celltype_up)) + sign(abs(mat_celltype_dn))
ht <- Heatmap(mat_celltype_bin, cluster_columns=FALSE, cluster_rows=TRUE,
                clustering_distance_rows='euclidean', clustering_method_rows='ward.D2')
gene_dend <- row_dend(ht)
# find the (estimated) number of clusters for a dendrogram using average silhouette width
k_sil <- find_k(gene_dend, krange=2:(nleaves(gene_dend)-1))
col_order <- c("Na誰ve_rest_0h","TEMrest_0h",
                "TCMrest_0h",'Na誰ve_act_2h','Na誰ve_act_5h','Na誰ve_act_15h',"TCMact_2h","TCMact_5h","TCMact_15h",
                "TEM_HDAC9hi_2h","TEM_HDAC9hi_5h","TEM_HDAC9hi_15h","Treg_0h","Treg_2h","Treg_5h","Treg_15h")
 
inf <- #fb825e
noninf <- #030312
# params
fdr <- 0.1 # FDR cutoff
min_padj <- 1E-20 # threshold to min padj
order_celltype <- col_order
subset_celltype <- col_order
subset_heavy <- col_order
n_heavy <- 2 # top TF per heavy subset
n_other <- 0 # top TF per other subset
keep_tf <- NULL
del_tf <- NULL
heat_max_tf <- 30 # max number of tfs to plot
heat_max_p_celltype <- 8 # max -log10p heatmap - celltype
heat_max_tfmrna <- 2 # max tf mrna colorbar
heat_max_tfa <- 2 # max tfa colorbar
heat_h_celltype <- 28 # heatmap height - celltype
heat_w_celltype <- 4 # heatmap height - celltype
heat_h_celltype_sub <- 20 # heatmap height - celltype subset
heat_w_celltype_sub <- 10 # heatmap height - celltype subset
heat_h_age <- 2.7 # age heatmap height
max_opt_k <- 40 # number of kmeans clusters to test
k_clust <- 5 # number of kmeans clusters for core heatmap
k_clust_other <- 5 # number of kmeans clusters for core heatmap
clust_lw <- 1.5 # row cluster line weight
heat_w_diff_other <- 4.5 # heatmap width - tfa diff other
heat_h_diff_other <- 21 # heatmap height - tfa diff other
# heatmap color scale
heat_col_up <- colorRamp2(c(0, heat_max_p_celltype), c('white','red'))
heat_col_dn <- colorRamp2(c(0, heat_max_p_celltype), c('white','blue'))
heat_col_both <- colorRamp2(c(-heat_max_p_celltype, 0, heat_max_p_celltype), c('blue','white','red'))
heat_col_tfmrna <- colorRamp2(c(-heat_max_tfmrna, 0, heat_max_tfmrna), c('blue','white','red'))
heat_col_tfa <- colorRamp2(c(-heat_max_tfa, 0, heat_max_tfa), c('forestgreen','white','blueviolet'))
heat_col_bin <- colorRamp2(c(0, 1), c('white','black'))
# load signature tfs
sig_tf_all <- read.table(file_sig_tf)
colnames(sig_tf_all) <- sig_tf_all[1,]
sig_tf_all <- sig_tf_all[-1,]
sig_tf_all <- sig_tf_all[,1:3]
# sig_tf_all <- sig_tf_all[grepl('IAV_6',sig_tf_all$group_major),]
sig_tf_up <- subset(sig_tf_all, sig_tf_all$MeanLog2FC > 0)
sig_tf_dn <- subset(sig_tf_all, sig_tf_all$MeanLog2FC < 0)
colnames(sig_tf_up) <- c('CellType','TF','MeanLog2FC')
colnames(sig_tf_dn) <- c('CellType','TF','MeanLog2FC')
sig_tf_up$CellTypeTF <- paste(sig_tf_up$CellType, sig_tf_up$TF, sep='_')
sig_tf_dn$CellTypeTF <- paste(sig_tf_dn$CellType, sig_tf_dn$TF, sep='_')
# load gsea
gsea_celltype_up <- read.delim(file_gsea_celltype_up, header=TRUE, row.names=1, sep='\t')
gsea_celltype_dn <- read.delim(file_gsea_celltype_dn, header=TRUE, row.names=1, sep='\t')
gsea_celltype_up <- gsea_celltype_up[grepl('^Up',rownames(gsea_celltype_up)),]
gsea_celltype_dn <- gsea_celltype_dn[grepl('^Down',rownames(gsea_celltype_dn)),]
# reformat
#cell type
rownames(gsea_celltype_up) <- gsub('Upcelltype_condition','',rownames(gsea_celltype_up))
rownames(gsea_celltype_dn) <- gsub('Downcelltype_condition','',rownames(gsea_celltype_dn))
gsea_celltype_up <- melt(as.matrix(gsea_celltype_up), value.name='Padj', varnames=c('CellType','TF'))
gsea_celltype_dn <- melt(as.matrix(gsea_celltype_dn), value.name='Padj', varnames=c('CellType','TF'))
gsea_celltype_up$Padj <- pmax(gsea_celltype_up$Padj, min_padj)
gsea_celltype_dn$Padj <- pmax(gsea_celltype_dn$Padj, min_padj)
# filter by fdr
gsea_celltype_up <- subset(gsea_celltype_up, Padj <= fdr)
gsea_celltype_dn <- subset(gsea_celltype_dn, Padj <= fdr)
# filter by signature TFs
gsea_celltype_up$CellTypeTF <- paste(gsea_celltype_up$CellType, gsea_celltype_up$TF, sep='_')
gsea_celltype_dn$CellTypeTF <- paste(gsea_celltype_dn$CellType, gsea_celltype_dn$TF, sep='_')
gsea_celltype_up <- subset(gsea_celltype_up, CellTypeTF %in% sig_tf_up$CellTypeTF)
gsea_celltype_dn <- subset(gsea_celltype_dn, CellTypeTF %in% sig_tf_up$CellTypeTF)
# -log10P
gsea_celltype_up$LogP <- -log10(gsea_celltype_up$Padj)
gsea_celltype_dn$LogP <- -log10(gsea_celltype_dn$Padj)
#filter inf values from 0 padj
gsea_celltype_up <- gsea_celltype_up[which(gsea_celltype_up$Padj != 0),]
gsea_celltype_dn <- gsea_celltype_dn[which(gsea_celltype_dn$Padj != 0),]
# heatmap matrices
celltype_all <- unique(union(gsea_celltype_up$CellType,gsea_celltype_dn$CellType))
tf_all_celltype <- unique(union(gsea_celltype_up$TF,gsea_celltype_dn$TF))
mat_celltype_up <- matrix(0, length(tf_all_celltype), length(celltype_all))
colnames(mat_celltype_up) <- celltype_all
rownames(mat_celltype_up) <- tf_all_celltype
mat_celltype_dn <- matrix(0, length(tf_all_celltype), length(celltype_all))
colnames(mat_celltype_dn) <- celltype_all
rownames(mat_celltype_dn) <- tf_all_celltype
for (ix in 1:nrow(gsea_celltype_up)){
    mat_celltype_up[as.character(gsea_celltype_up$TF)[ix], as.character(gsea_celltype_up$CellType)[ix]] <- 
                        gsea_celltype_up$LogP[ix]
}
for (ix in 1:nrow(gsea_celltype_dn)){
    mat_celltype_dn[as.character(gsea_celltype_dn$TF)[ix], as.character(gsea_celltype_dn$CellType)[ix]] <- 
                        gsea_celltype_dn$LogP[ix]
}
# order tfs
order_tf_celltype <- rev(rownames(mat_celltype_up)[cluster_hierarchical(t(cbind(mat_celltype_up,mat_celltype_dn)))])
mat_celltype_up <- mat_celltype_up[order_tf_celltype,]
mat_celltype_up <- mat_celltype_up[,order_celltype]
mat_celltype_dn <- mat_celltype_dn[order_tf_celltype,]
mat_celltype_dn <- mat_celltype_dn[,order_celltype]
order_tf_celltype <- rev(rownames(mat_celltype_up)[cluster_hierarchical(t(cbind(mat_celltype_up,mat_celltype_dn)))])
mat_celltype_up <- mat_celltype_up[order_tf_celltype,]
mat_celltype_up <- mat_celltype_up[,order_celltype]
mat_celltype_dn <- mat_celltype_dn[order_tf_celltype,]
mat_celltype_dn <- mat_celltype_dn[,order_celltype]
# heatmap celltype annotation
heat_meta_celltype <- list()
heat_meta_celltype[['CellType']] <- setNames(color_celltype[,1], rownames(color_celltype))
annot_celltype <- HeatmapAnnotation(df=data.frame(row.names=order_celltype, CellType=order_celltype), 
                                    col=heat_meta_celltype, show_legend=FALSE,
                                    annotation_name_gp=gpar(fontsize=8), simple_anno_size=unit(0.5,'cm'))
annot_celltype_sub <- HeatmapAnnotation(df=data.frame(row.names=subset_celltype, CellType=subset_celltype), 
                                    col=heat_meta_celltype, show_legend=FALSE,
                                    annotation_name_gp=gpar(fontsize=8), simple_anno_size=unit(0.5,'cm'))
# optimal k
mat_celltype_bin <- sign(abs(mat_celltype_up)) + sign(abs(mat_celltype_dn))
ht <- Heatmap(mat_celltype_bin, cluster_columns=FALSE, cluster_rows=TRUE,
                clustering_distance_rows='euclidean', clustering_method_rows='ward.D2')
gene_dend <- row_dend(ht)
# find the (estimated) number of clusters for a dendrogram using average silhouette width
k_sil <- find_k(gene_dend, krange=2:50)
df_opt_all <- data.frame(k=1:(nleaves(gene_dend)-1), Score=k_sil$crit)
ggplot(df_opt_all, aes(x=k, y=Score)) + geom_line() + geom_point(size=2) + 
    theme_minimal() +
    labs(x='Number of Clusters (k)',y='Mean Silhouette Width', color='') + 
    theme(axis.title=element_text(size=14, face='plain')) + 
    theme(axis.text=element_text(size=13, face='plain')) +
    theme(legend.text=element_text(size=12)) +
    theme(legend.position='none')
file_out <- file.path(dir_out, 'clust_opt_silhouette.pdf')
ggsave(file_out, height=4, width=4.2)
k_clust <- as.numeric(df_opt_all[which(df_opt_all$Score == max(df_opt_all$Score)),'k'])
k_clust_other <- k_clust
# cluster binary core enrichments
file_out <- file.path(dir_out, paste0('heat_GRN_core_CellType_bin.pdf'))
pdf(file_out, width=heat_w_celltype, height=heat_h_celltype)
ht <- Heatmap(mat_celltype_bin, name='-Log10(P)', col=heat_col_bin, 
                column_labels=name_celltype[colnames(mat_celltype_up),'Name'],
                rect_gp=gpar(col='grey70', lwd=1), 
                cluster_columns=FALSE, cluster_rows=TRUE, 
                show_column_dend=FALSE, show_row_dend=FALSE, show_row_names=TRUE, show_column_names=TRUE, 
                column_names_side='top', row_names_side='left',column_names_rot=90, 
                column_names_gp=gpar(fontsize=12, fontface=2), 
                row_km=k_clust, row_names_gp=gpar(fontsize=6))
ht <- draw(ht)
dev.off()
# tf order
order_bin <- row_order(ht)
order_tf_bin <- NULL
line_clust_bin <- NULL
order_bin_new <- list()
for (ix in names(order_bin)){
    curr_tf <- rownames(mat_celltype_bin)[order_bin[[ix]]]
    curr_tf <- rev(sort(curr_tf))
    order_tf_bin <- c(order_tf_bin, curr_tf)
    line_clust_bin <- c(line_clust_bin, length(curr_tf))
    order_bin_new[[ix]] <- NULL
    for (jx in curr_tf){
        order_bin_new[[ix]] <- c(order_bin_new[[ix]], which(rownames(mat_celltype_bin)==jx))
    }
}
line_clust_bin <- cumsum(line_clust_bin)
loc_clust_bin <- line_clust_bin/nrow(mat_celltype_bin)
order_tf_bin <- rev(order_tf_bin)
# ordered binary heatmap
file_out <- file.path(dir_out, paste0('heat_GRN_core_CellType_bin_ordered.pdf'))
pdf(file_out, width=heat_w_celltype, height=heat_h_celltype)
ht <- Heatmap(mat_celltype_bin[order_tf_bin,], name='-Log10(P)', col=heat_col_bin, 
                column_labels=name_celltype[colnames(mat_celltype_up),'Name'],
                rect_gp=gpar(col='grey70', lwd=1),
                cluster_columns=FALSE, cluster_rows=FALSE,
                show_column_dend=FALSE, show_row_dend=FALSE, show_row_names=TRUE, show_column_names=TRUE, 
                column_names_side='top', row_names_side='left',column_names_rot=90,
                column_names_gp=gpar(fontsize=12, fontface=2),
              row_names_gp=gpar(fontsize=6))
ht <- draw(ht)
for (ix in loc_clust_bin){
    decorate_heatmap_body('-Log10(P)',grid.lines(x=unit(c(0, 1),'npc'),y=unit(c(ix,ix),'npc'),gp=gpar(lwd=clust_lw)))
}
dev.off()
# heatmap - core tfs
file_out <- file.path(dir_out, paste0('heat_GRN_core_CellType_up.pdf'))
pdf(file_out, width=heat_w_celltype, height=heat_h_celltype)
ht <- Heatmap(mat_celltype_up[order_tf_bin,], name='-Log10(P)', col=heat_col_up, 
                column_labels=name_celltype[colnames(mat_celltype_up),'Name'],
                rect_gp = gpar(col='grey70', lwd=1),
                cluster_columns=FALSE, cluster_rows=FALSE, 
                show_column_dend=FALSE, show_row_dend=FALSE, show_row_names=TRUE, show_column_names=TRUE, 
                column_names_side='top', row_names_side='left',column_names_rot=90,
                column_names_gp=gpar(fontsize=12, fontface=2),
              row_names_gp=gpar(fontsize=8))
ht <- draw(ht)
for (ix in loc_clust_bin){
    decorate_heatmap_body('-Log10(P)',grid.lines(x=unit(c(0, 1),'npc'),y=unit(c(ix,ix),'npc'),gp=gpar(lwd=clust_lw)))
}
dev.off()
file_out <- file.path(dir_out, paste0('heat_GRN_core_CellType_dn.pdf'))
pdf(file_out, width=heat_w_celltype, height=heat_h_celltype)
ht <- Heatmap(mat_celltype_dn[order_tf_bin,], name='-Log10(P)', col=heat_col_dn, 
                column_labels=name_celltype[colnames(mat_celltype_dn),'Name'],
                rect_gp = gpar(col='grey70', lwd=1),
                cluster_columns=FALSE, cluster_rows=FALSE, 
                show_column_dend=FALSE, show_row_dend=FALSE, show_row_names=TRUE, show_column_names=TRUE, 
                column_names_side='top', row_names_side='left',column_names_rot=90,
                column_names_gp=gpar(fontsize=12, fontface=2), 
              row_names_gp=gpar(fontsize=8))
ht <- draw(ht)
for (ix in loc_clust_bin){
    decorate_heatmap_body('-Log10(P)',grid.lines(x=unit(c(0, 1),'npc'),y=unit(c(ix,ix),'npc'),gp=gpar(lwd=clust_lw)))
}
dev.off()
# subset celltypes
mat_subset_up <- mat_celltype_up[,subset_celltype]
mat_subset_dn <- mat_celltype_dn[,subset_celltype]
tf_subset <- rownames(mat_subset_up)[which(rowSums(mat_subset_up+mat_subset_dn) > 0)]
mat_subset_up <- mat_subset_up[tf_subset,]
mat_subset_dn <- mat_subset_dn[tf_subset,]
# top tfs
df_sub <- net_full_2_sparse(mat_subset_up+mat_subset_dn)
colnames(df_sub) <- c('CellType','TF','LogP')
top_tf_heavy <- df_sub %>% group_by(CellType) %>% top_n(n=n_heavy, wt=LogP)
top_tf_heavy <- subset(top_tf_heavy, CellType %in% subset_heavy)
top_tf_heavy <- as.character(unique(top_tf_heavy$TF))
top_tf_heavy
top_tf_heavy <- top_tf_heavy[c(-11,-15,-18,-26,-34,-42,-46,-52,-56,-57,-59,-67)]
top_tf_other <- df_sub %>% group_by(CellType) %>% top_n(n=n_other, wt=LogP)
top_tf_other <- subset(top_tf_other, CellType %in% setdiff(subset_celltype,subset_heavy))
top_tf_other <- as.character(unique(top_tf_other$TF))
top_tf <- sort(unique(c(keep_tf,top_tf_heavy,top_tf_other)))
top_tf <- setdiff(top_tf,del_tf)
mat_subset_up <- mat_subset_up[top_tf_heavy,]
mat_subset_dn <- mat_subset_dn[top_tf_heavy,]
file_out <- file.path(dir_out, paste0('heat_GRN_core_CellType_up_subset.pdf'))
pdf(file_out, width=heat_w_celltype_sub, height=heat_h_celltype_sub)
ht <- Heatmap(mat_subset_up, name='-Log10(P)', col=heat_col_up, 
                #column_labels=name_celltype[colnames(mat_subset_up),'Name']
                column_labels = colnames(mat_subset_up),
                rect_gp = gpar(col='grey70', lwd=1),
                cluster_columns=FALSE, cluster_rows=FALSE, 
                show_column_dend=FALSE, show_row_dend=FALSE, show_row_names=TRUE, show_column_names=FALSE, 
                column_names_side='top', row_names_side='left',column_names_rot=90,
                column_names_gp=gpar(fontsize=24, fontface=2), 
              row_names_gp=gpar(fontsize=22))
ht <- draw(ht)
dev.off()
order_tf_sub <- rownames(mat_subset_up)[row_order(ht)]
file_out <- file.path(dir_out, paste0('heat_GRN_core_CellType_dn_subset.pdf'))
pdf(file_out, width=heat_w_celltype_sub, height=heat_h_celltype_sub)
ht <- Heatmap(mat_subset_dn[order_tf_sub,], name='-Log10(P)', col=heat_col_dn, 
                column_labels=name_celltype[colnames(mat_subset_dn),'Name'],
                rect_gp = gpar(col='grey70', lwd=1),
                cluster_columns=FALSE, cluster_rows=FALSE, 
                show_column_dend=FALSE, show_row_dend=FALSE, show_row_names=TRUE, show_column_names=FALSE, 
                column_names_side='top', row_names_side='left',column_names_rot=90,
                column_names_gp=gpar(fontsize=24, fontface=2), 
                row_names_gp=gpar(fontsize=22))
ht <- draw(ht)
dev.off()
file_out <- file.path(dir_out, paste0('heat_GRN_core_CellType_legend.pdf'))
label_legend <- '-Log10(P)*(Edge Sign)'
pdf(file_out)
lgd <- Legend(col_fun=heat_col_both, title=label_legend, direction='horizontal', title_position='topcenter')
lgd <- draw(lgd)
dev.off()
file_out <- file.path(dir_out, "TFA_heatmap.pdf")
pdf(file_out, width=heat_w_celltype_sub, height=heat_h_celltype_sub)
ht <- Heatmap(TFA, name='TFA', col=heat_col, 
                #column_labels=name_celltype[colnames(mat_subset_up),'Name']
                column_labels = colnames(TFA),
                rect_gp = gpar(col='grey70', lwd=1),
                cluster_columns=FALSE, cluster_rows=FALSE, 
                show_column_dend=FALSE, show_row_dend=FALSE, show_row_names=TRUE, show_column_names=FALSE, 
                column_names_side='top', row_names_side='left',column_names_rot=90,
                column_names_gp=gpar(fontsize=24, fontface=2), 
              row_names_gp=gpar(fontsize=22))
draw(ht)
dev(off)
dev.off()
head(TFA)
rownames(TFA)
colnames(TFA)
colnames(mat_celltype_up)
